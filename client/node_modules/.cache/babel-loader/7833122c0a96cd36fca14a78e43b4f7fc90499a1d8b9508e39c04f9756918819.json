{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mount\\\\Documents\\\\Coding-Projects\\\\Pokemon-Encyclopedia\\\\pokemon-encyclopedia\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport { QUERY_POKEMON } from '../utils/queries';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Card } from 'react-bootstrap';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_POKEMON);\n  const [pokeData, setPokeData] = useState(data === null || data === void 0 ? void 0 : data.pokemoninfo);\n  useEffect(() => {\n    if (data) {\n      setPokeData(data.pokemoninfo);\n    }\n  });\n  console.log(pokeData);\n  pokeData === null || pokeData === void 0 ? void 0 : pokeData.forEach(element => {\n    let firstUpper = element.name.charAt(0).toUpperCase();\n    let endName = element.name.slice(1);\n    if (endName.search('/[_-]') !== -1) {\n      console.log('hit');\n    }\n    let newName = firstUpper + endName;\n    console.log(newName);\n  });\n\n  // const pokemonData = data?.pokemoninfo;\n\n  // const processPokemonData = pokemonData?.forEach(element => {\n  //     console.log(element.id)\n  //     console.log(element.name)\n  // })\n\n  // useEffect(() => {\n  //     useQuery(QUERY_POKEMON)\n  // })\n\n  // pokemonData.forEach(element => pokemonDataArray.push(element))\n  // console.log(pokemonDataArray);\n  // console.log(typeof pokemonData)\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"pokelist\",\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Container, {\n      children: pokeData === null || pokeData === void 0 ? void 0 : pokeData.map(pokemon => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: pokemon.sprites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.abilities.map(abilities => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: abilities\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.game_indices.map(games => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: games\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.types.map(types => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: types\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, pokemon.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n    //     <div>\n    //         {pokemonData.map((pokemon) => (\n    //             <div>\n    //     <li key={pokemon.id}><h1>{pokemon.name}</h1></li>\n    //     <li><h2>{pokemon.abilities}</h2></li>\n    //     <li><h3>{pokemon.game_indices}</h3></li>\n\n    //     <li><h4>{pokemon.types}</h4></li>\n    //     <li><h5>{pokemon.id}</h5></li>\n\n    //             </div>\n    // ))}\n    //     </div>\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"lgiMRpm9rfkfn0LG2L0dAq1mqjY=\", false, function () {\n  return [useQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useQuery","QUERY_POKEMON","React","useState","useEffect","Container","Col","Row","Card","Fragment","_Fragment","jsxDEV","_jsxDEV","Home","_s","data","loading","error","pokeData","setPokeData","pokemoninfo","console","log","forEach","element","firstUpper","name","charAt","toUpperCase","endName","slice","search","newName","id","children","map","pokemon","Header","fileName","_jsxFileName","lineNumber","columnNumber","Img","src","sprites","Body","abilities","game_indices","games","types","_c","$RefreshReg$"],"sources":["C:/Users/mount/Documents/Coding-Projects/Pokemon-Encyclopedia/pokemon-encyclopedia/client/src/pages/Home.js"],"sourcesContent":["import { useQuery } from '@apollo/client';\r\nimport { QUERY_POKEMON } from '../utils/queries';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Col, Row, Card } from 'react-bootstrap'\r\n\r\nconst Home = () => {\r\n    const {data, loading, error} = useQuery(QUERY_POKEMON);\r\n    const [pokeData, setPokeData] = useState(data?.pokemoninfo);\r\n\r\n\r\n    useEffect(() => {\r\n        if(data) {\r\n        setPokeData(data.pokemoninfo)\r\n        }\r\n    })\r\n\r\n    console.log(pokeData)\r\n    \r\n    pokeData?.forEach(element => {\r\n        let firstUpper = (element.name.charAt(0)).toUpperCase();\r\n        let endName = element.name.slice(1);\r\n        if (endName.search('/[_-]') !== -1) {\r\n            console.log('hit')\r\n        }\r\n        let newName = firstUpper + endName;\r\n\r\n        console.log(newName)\r\n    })\r\n\r\n    // const pokemonData = data?.pokemoninfo;\r\n\r\n    // const processPokemonData = pokemonData?.forEach(element => {\r\n    //     console.log(element.id)\r\n    //     console.log(element.name)\r\n    // })\r\n\r\n    // useEffect(() => {\r\n    //     useQuery(QUERY_POKEMON)\r\n    // })\r\n\r\n\r\n    // pokemonData.forEach(element => pokemonDataArray.push(element))\r\n    // console.log(pokemonDataArray);\r\n    // console.log(typeof pokemonData)\r\n    return (\r\n        \r\n        <Container id=\"pokelist\">\r\n            {loading ? (\r\n                <></>\r\n         ) : (\r\n            <Container>\r\n            {pokeData?.map((pokemon) => (\r\n                <Card key={pokemon.id}>\r\n        <Card.Header>{pokemon.name}</Card.Header>\r\n        <Card.Img src={pokemon.sprites}></Card.Img>\r\n        <Card.Body>\r\n        <p>{pokemon.abilities.map((abilities) => (\r\n            <p>{abilities}</p>\r\n        ))}</p>\r\n        <p>{pokemon.game_indices.map((games) => (\r\n            <p>{games}</p>\r\n        ))}</p>\r\n        \r\n        \r\n            <p>\r\n                {pokemon.types.map((types) => (\r\n            <div>{types}</div>))}\r\n            </p>\r\n            \r\n\r\n        <p>{pokemon.id}</p>\r\n        </Card.Body>\r\n                </Card>\r\n    ))}\r\n        </Container>\r\n        //     <div>\r\n        //         {pokemonData.map((pokemon) => (\r\n        //             <div>\r\n        //     <li key={pokemon.id}><h1>{pokemon.name}</h1></li>\r\n        //     <li><h2>{pokemon.abilities}</h2></li>\r\n        //     <li><h3>{pokemon.game_indices}</h3></li>\r\n            \r\n        //     <li><h4>{pokemon.types}</h4></li>\r\n        //     <li><h5>{pokemon.id}</h5></li>\r\n            \r\n        //             </div>\r\n        // ))}\r\n        //     </div>\r\n         )}\r\n        \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,iBAAiB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAACC,IAAI;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGjB,QAAQ,CAACC,aAAa,CAAC;EACtD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACY,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,WAAW,CAAC;EAG3DhB,SAAS,CAAC,MAAM;IACZ,IAAGW,IAAI,EAAE;MACTI,WAAW,CAACJ,IAAI,CAACK,WAAW,CAAC;IAC7B;EACJ,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EAErBA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,OAAO,CAACC,OAAO,IAAI;IACzB,IAAIC,UAAU,GAAID,OAAO,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEC,WAAW,CAAC,CAAC;IACvD,IAAIC,OAAO,GAAGL,OAAO,CAACE,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACnC,IAAID,OAAO,CAACE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MAChCV,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACtB;IACA,IAAIU,OAAO,GAAGP,UAAU,GAAGI,OAAO;IAElCR,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;EACxB,CAAC,CAAC;;EAEF;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAGA;EACA;EACA;EACA,oBAEIpB,OAAA,CAACP,SAAS;IAAC4B,EAAE,EAAC,UAAU;IAAAC,QAAA,EACnBlB,OAAO,gBACJJ,OAAA,CAAAF,SAAA,mBAAI,CAAC,gBAETE,OAAA,CAACP,SAAS;MAAA6B,QAAA,EACThB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEiB,GAAG,CAAEC,OAAO,iBACnBxB,OAAA,CAACJ,IAAI;QAAA0B,QAAA,gBACbtB,OAAA,CAACJ,IAAI,CAAC6B,MAAM;UAAAH,QAAA,EAAEE,OAAO,CAACV;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACzC7B,OAAA,CAACJ,IAAI,CAACkC,GAAG;UAACC,GAAG,EAAEP,OAAO,CAACQ;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eAC3C7B,OAAA,CAACJ,IAAI,CAACqC,IAAI;UAAAX,QAAA,gBACVtB,OAAA;YAAAsB,QAAA,EAAIE,OAAO,CAACU,SAAS,CAACX,GAAG,CAAEW,SAAS,iBAChClC,OAAA;cAAAsB,QAAA,EAAIY;YAAS;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CACpB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACP7B,OAAA;YAAAsB,QAAA,EAAIE,OAAO,CAACW,YAAY,CAACZ,GAAG,CAAEa,KAAK,iBAC/BpC,OAAA;cAAAsB,QAAA,EAAIc;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAGH7B,OAAA;YAAAsB,QAAA,EACKE,OAAO,CAACa,KAAK,CAACd,GAAG,CAAEc,KAAK,iBAC7BrC,OAAA;cAAAsB,QAAA,EAAMe;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eAGR7B,OAAA;YAAAsB,QAAA,EAAIE,OAAO,CAACH;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,GAnBOL,OAAO,CAACH,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBf,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;IACX;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;EACE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAES,CAAC;AAEpB,CAAC;AAAA3B,EAAA,CAvFKD,IAAI;EAAA,QACyBb,QAAQ;AAAA;AAAAkD,EAAA,GADrCrC,IAAI;AAyFV,eAAeA,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}